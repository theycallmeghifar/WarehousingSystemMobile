// Generated by view binder compiler. Do not edit!
package fim.project.warehousingsystemmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import fim.project.warehousingsystemmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBarangKeluarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgBarangKeluarStatus;

  @NonNull
  public final TextView txtCurrentQtyBarangKeluar;

  @NonNull
  public final TextView txtGpio1;

  @NonNull
  public final TextView txtGpio2;

  @NonNull
  public final TextView txtGpio3;

  @NonNull
  public final TextView txtGpioStatus;

  @NonNull
  public final TextView txtIdBarangBarangKeluar;

  @NonNull
  public final TextView txtIpAddress;

  @NonNull
  public final TextView txtItemCodeBarangKeluar;

  @NonNull
  public final TextView txtItemNameBarangKeluar;

  @NonNull
  public final TextView txtJumlahBarangKeluar;

  @NonNull
  public final TextView txtMainItemCodeBarangKeluar;

  @NonNull
  public final TextView txtMaxBarangBarangKeluar;

  @NonNull
  public final TextView txtNamaLemariBarangKeluar;

  @NonNull
  public final TextView txtNamaPaletBarangKeluar;

  @NonNull
  public final TextView txtNamaRakBarangKeluar;

  @NonNull
  public final TextView txtPaletIdBarangKeluar;

  @NonNull
  public final TextView txtStatusBarangKeluar;

  private ItemBarangKeluarBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView imgBarangKeluarStatus, @NonNull TextView txtCurrentQtyBarangKeluar,
      @NonNull TextView txtGpio1, @NonNull TextView txtGpio2, @NonNull TextView txtGpio3,
      @NonNull TextView txtGpioStatus, @NonNull TextView txtIdBarangBarangKeluar,
      @NonNull TextView txtIpAddress, @NonNull TextView txtItemCodeBarangKeluar,
      @NonNull TextView txtItemNameBarangKeluar, @NonNull TextView txtJumlahBarangKeluar,
      @NonNull TextView txtMainItemCodeBarangKeluar, @NonNull TextView txtMaxBarangBarangKeluar,
      @NonNull TextView txtNamaLemariBarangKeluar, @NonNull TextView txtNamaPaletBarangKeluar,
      @NonNull TextView txtNamaRakBarangKeluar, @NonNull TextView txtPaletIdBarangKeluar,
      @NonNull TextView txtStatusBarangKeluar) {
    this.rootView = rootView;
    this.imgBarangKeluarStatus = imgBarangKeluarStatus;
    this.txtCurrentQtyBarangKeluar = txtCurrentQtyBarangKeluar;
    this.txtGpio1 = txtGpio1;
    this.txtGpio2 = txtGpio2;
    this.txtGpio3 = txtGpio3;
    this.txtGpioStatus = txtGpioStatus;
    this.txtIdBarangBarangKeluar = txtIdBarangBarangKeluar;
    this.txtIpAddress = txtIpAddress;
    this.txtItemCodeBarangKeluar = txtItemCodeBarangKeluar;
    this.txtItemNameBarangKeluar = txtItemNameBarangKeluar;
    this.txtJumlahBarangKeluar = txtJumlahBarangKeluar;
    this.txtMainItemCodeBarangKeluar = txtMainItemCodeBarangKeluar;
    this.txtMaxBarangBarangKeluar = txtMaxBarangBarangKeluar;
    this.txtNamaLemariBarangKeluar = txtNamaLemariBarangKeluar;
    this.txtNamaPaletBarangKeluar = txtNamaPaletBarangKeluar;
    this.txtNamaRakBarangKeluar = txtNamaRakBarangKeluar;
    this.txtPaletIdBarangKeluar = txtPaletIdBarangKeluar;
    this.txtStatusBarangKeluar = txtStatusBarangKeluar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBarangKeluarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBarangKeluarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_barang_keluar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBarangKeluarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_barang_keluar_status;
      ImageView imgBarangKeluarStatus = ViewBindings.findChildViewById(rootView, id);
      if (imgBarangKeluarStatus == null) {
        break missingId;
      }

      id = R.id.txtCurrentQtyBarangKeluar;
      TextView txtCurrentQtyBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtCurrentQtyBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtGpio1;
      TextView txtGpio1 = ViewBindings.findChildViewById(rootView, id);
      if (txtGpio1 == null) {
        break missingId;
      }

      id = R.id.txtGpio2;
      TextView txtGpio2 = ViewBindings.findChildViewById(rootView, id);
      if (txtGpio2 == null) {
        break missingId;
      }

      id = R.id.txtGpio3;
      TextView txtGpio3 = ViewBindings.findChildViewById(rootView, id);
      if (txtGpio3 == null) {
        break missingId;
      }

      id = R.id.txtGpioStatus;
      TextView txtGpioStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtGpioStatus == null) {
        break missingId;
      }

      id = R.id.txtIdBarangBarangKeluar;
      TextView txtIdBarangBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtIdBarangBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtIpAddress;
      TextView txtIpAddress = ViewBindings.findChildViewById(rootView, id);
      if (txtIpAddress == null) {
        break missingId;
      }

      id = R.id.txtItemCodeBarangKeluar;
      TextView txtItemCodeBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtItemCodeBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtItemNameBarangKeluar;
      TextView txtItemNameBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtItemNameBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtJumlahBarangKeluar;
      TextView txtJumlahBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtJumlahBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtMainItemCodeBarangKeluar;
      TextView txtMainItemCodeBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtMainItemCodeBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtMaxBarangBarangKeluar;
      TextView txtMaxBarangBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtMaxBarangBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtNamaLemariBarangKeluar;
      TextView txtNamaLemariBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtNamaLemariBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtNamaPaletBarangKeluar;
      TextView txtNamaPaletBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtNamaPaletBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtNamaRakBarangKeluar;
      TextView txtNamaRakBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtNamaRakBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtPaletIdBarangKeluar;
      TextView txtPaletIdBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtPaletIdBarangKeluar == null) {
        break missingId;
      }

      id = R.id.txtStatusBarangKeluar;
      TextView txtStatusBarangKeluar = ViewBindings.findChildViewById(rootView, id);
      if (txtStatusBarangKeluar == null) {
        break missingId;
      }

      return new ItemBarangKeluarBinding((LinearLayout) rootView, imgBarangKeluarStatus,
          txtCurrentQtyBarangKeluar, txtGpio1, txtGpio2, txtGpio3, txtGpioStatus,
          txtIdBarangBarangKeluar, txtIpAddress, txtItemCodeBarangKeluar, txtItemNameBarangKeluar,
          txtJumlahBarangKeluar, txtMainItemCodeBarangKeluar, txtMaxBarangBarangKeluar,
          txtNamaLemariBarangKeluar, txtNamaPaletBarangKeluar, txtNamaRakBarangKeluar,
          txtPaletIdBarangKeluar, txtStatusBarangKeluar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
