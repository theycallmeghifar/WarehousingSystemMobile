// Generated by view binder compiler. Do not edit!
package fim.project.warehousingsystemmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import fim.project.warehousingsystemmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityKonfirmasiBarangKeluarBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button barangKeluarBtnDetailKonfirmasi;

  @NonNull
  public final Button barangKeluarBtnDetailScan;

  @NonNull
  public final CardView barangKeluarBtnLokasi;

  @NonNull
  public final TextView barangKeluarItemCodeValue;

  @NonNull
  public final TextView barangKeluarItemNameValue;

  @NonNull
  public final RelativeLayout barangKeluarNamaLemariRv;

  @NonNull
  public final TextView barangKeluarNamaLemariValue;

  @NonNull
  public final RelativeLayout barangKeluarNamaPaletRv;

  @NonNull
  public final TextView barangKeluarNamaPaletValue;

  @NonNull
  public final RelativeLayout barangKeluarNamaRakRv;

  @NonNull
  public final TextView barangKeluarNamaRakValue;

  @NonNull
  public final TextView barangKeluarQtyInputValue;

  @NonNull
  public final TextView barangKeluarTotalQtyValue;

  @NonNull
  public final TextView barangKeluarTxtError;

  @NonNull
  public final BottomNavigationView bottomMenu;

  @NonNull
  public final WebView confirmWvGPIO1;

  @NonNull
  public final WebView confirmWvGPIO2;

  @NonNull
  public final WebView confirmWvGPIO3;

  private ActivityKonfirmasiBarangKeluarBinding(@NonNull FrameLayout rootView,
      @NonNull Button barangKeluarBtnDetailKonfirmasi, @NonNull Button barangKeluarBtnDetailScan,
      @NonNull CardView barangKeluarBtnLokasi, @NonNull TextView barangKeluarItemCodeValue,
      @NonNull TextView barangKeluarItemNameValue, @NonNull RelativeLayout barangKeluarNamaLemariRv,
      @NonNull TextView barangKeluarNamaLemariValue,
      @NonNull RelativeLayout barangKeluarNamaPaletRv, @NonNull TextView barangKeluarNamaPaletValue,
      @NonNull RelativeLayout barangKeluarNamaRakRv, @NonNull TextView barangKeluarNamaRakValue,
      @NonNull TextView barangKeluarQtyInputValue, @NonNull TextView barangKeluarTotalQtyValue,
      @NonNull TextView barangKeluarTxtError, @NonNull BottomNavigationView bottomMenu,
      @NonNull WebView confirmWvGPIO1, @NonNull WebView confirmWvGPIO2,
      @NonNull WebView confirmWvGPIO3) {
    this.rootView = rootView;
    this.barangKeluarBtnDetailKonfirmasi = barangKeluarBtnDetailKonfirmasi;
    this.barangKeluarBtnDetailScan = barangKeluarBtnDetailScan;
    this.barangKeluarBtnLokasi = barangKeluarBtnLokasi;
    this.barangKeluarItemCodeValue = barangKeluarItemCodeValue;
    this.barangKeluarItemNameValue = barangKeluarItemNameValue;
    this.barangKeluarNamaLemariRv = barangKeluarNamaLemariRv;
    this.barangKeluarNamaLemariValue = barangKeluarNamaLemariValue;
    this.barangKeluarNamaPaletRv = barangKeluarNamaPaletRv;
    this.barangKeluarNamaPaletValue = barangKeluarNamaPaletValue;
    this.barangKeluarNamaRakRv = barangKeluarNamaRakRv;
    this.barangKeluarNamaRakValue = barangKeluarNamaRakValue;
    this.barangKeluarQtyInputValue = barangKeluarQtyInputValue;
    this.barangKeluarTotalQtyValue = barangKeluarTotalQtyValue;
    this.barangKeluarTxtError = barangKeluarTxtError;
    this.bottomMenu = bottomMenu;
    this.confirmWvGPIO1 = confirmWvGPIO1;
    this.confirmWvGPIO2 = confirmWvGPIO2;
    this.confirmWvGPIO3 = confirmWvGPIO3;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityKonfirmasiBarangKeluarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityKonfirmasiBarangKeluarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_konfirmasi_barang_keluar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityKonfirmasiBarangKeluarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barangKeluar_btnDetailKonfirmasi;
      Button barangKeluarBtnDetailKonfirmasi = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarBtnDetailKonfirmasi == null) {
        break missingId;
      }

      id = R.id.barangKeluar_btnDetailScan;
      Button barangKeluarBtnDetailScan = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarBtnDetailScan == null) {
        break missingId;
      }

      id = R.id.barangKeluar_btnLokasi;
      CardView barangKeluarBtnLokasi = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarBtnLokasi == null) {
        break missingId;
      }

      id = R.id.barangKeluar_itemCodeValue;
      TextView barangKeluarItemCodeValue = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarItemCodeValue == null) {
        break missingId;
      }

      id = R.id.barangKeluar_itemNameValue;
      TextView barangKeluarItemNameValue = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarItemNameValue == null) {
        break missingId;
      }

      id = R.id.barangKeluar_namaLemari_rv;
      RelativeLayout barangKeluarNamaLemariRv = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarNamaLemariRv == null) {
        break missingId;
      }

      id = R.id.barangKeluar_namaLemariValue;
      TextView barangKeluarNamaLemariValue = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarNamaLemariValue == null) {
        break missingId;
      }

      id = R.id.barangKeluar_namaPalet_rv;
      RelativeLayout barangKeluarNamaPaletRv = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarNamaPaletRv == null) {
        break missingId;
      }

      id = R.id.barangKeluar_namaPaletValue;
      TextView barangKeluarNamaPaletValue = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarNamaPaletValue == null) {
        break missingId;
      }

      id = R.id.barangKeluar_namaRak_rv;
      RelativeLayout barangKeluarNamaRakRv = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarNamaRakRv == null) {
        break missingId;
      }

      id = R.id.barangKeluar_namaRakValue;
      TextView barangKeluarNamaRakValue = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarNamaRakValue == null) {
        break missingId;
      }

      id = R.id.barangKeluar_qtyInputValue;
      TextView barangKeluarQtyInputValue = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarQtyInputValue == null) {
        break missingId;
      }

      id = R.id.barangKeluar_totalQtyValue;
      TextView barangKeluarTotalQtyValue = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarTotalQtyValue == null) {
        break missingId;
      }

      id = R.id.barangKeluar_txt_error;
      TextView barangKeluarTxtError = ViewBindings.findChildViewById(rootView, id);
      if (barangKeluarTxtError == null) {
        break missingId;
      }

      id = R.id.bottom_menu;
      BottomNavigationView bottomMenu = ViewBindings.findChildViewById(rootView, id);
      if (bottomMenu == null) {
        break missingId;
      }

      id = R.id.confirm_wvGPIO1;
      WebView confirmWvGPIO1 = ViewBindings.findChildViewById(rootView, id);
      if (confirmWvGPIO1 == null) {
        break missingId;
      }

      id = R.id.confirm_wvGPIO2;
      WebView confirmWvGPIO2 = ViewBindings.findChildViewById(rootView, id);
      if (confirmWvGPIO2 == null) {
        break missingId;
      }

      id = R.id.confirm_wvGPIO3;
      WebView confirmWvGPIO3 = ViewBindings.findChildViewById(rootView, id);
      if (confirmWvGPIO3 == null) {
        break missingId;
      }

      return new ActivityKonfirmasiBarangKeluarBinding((FrameLayout) rootView,
          barangKeluarBtnDetailKonfirmasi, barangKeluarBtnDetailScan, barangKeluarBtnLokasi,
          barangKeluarItemCodeValue, barangKeluarItemNameValue, barangKeluarNamaLemariRv,
          barangKeluarNamaLemariValue, barangKeluarNamaPaletRv, barangKeluarNamaPaletValue,
          barangKeluarNamaRakRv, barangKeluarNamaRakValue, barangKeluarQtyInputValue,
          barangKeluarTotalQtyValue, barangKeluarTxtError, bottomMenu, confirmWvGPIO1,
          confirmWvGPIO2, confirmWvGPIO3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
