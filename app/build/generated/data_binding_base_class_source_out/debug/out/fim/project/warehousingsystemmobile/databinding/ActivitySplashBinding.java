// Generated by view binder compiler. Do not edit!
package fim.project.warehousingsystemmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import fim.project.warehousingsystemmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySplashBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final WebView splashInWvGPIO1;

  @NonNull
  public final WebView splashInWvGPIO2;

  @NonNull
  public final WebView splashInWvGPIO3;

  @NonNull
  public final WebView splashOutWvGPIO1;

  @NonNull
  public final WebView splashOutWvGPIO2;

  @NonNull
  public final WebView splashOutWvGPIO3;

  @NonNull
  public final TextView versionText;

  private ActivitySplashBinding(@NonNull FrameLayout rootView, @NonNull WebView splashInWvGPIO1,
      @NonNull WebView splashInWvGPIO2, @NonNull WebView splashInWvGPIO3,
      @NonNull WebView splashOutWvGPIO1, @NonNull WebView splashOutWvGPIO2,
      @NonNull WebView splashOutWvGPIO3, @NonNull TextView versionText) {
    this.rootView = rootView;
    this.splashInWvGPIO1 = splashInWvGPIO1;
    this.splashInWvGPIO2 = splashInWvGPIO2;
    this.splashInWvGPIO3 = splashInWvGPIO3;
    this.splashOutWvGPIO1 = splashOutWvGPIO1;
    this.splashOutWvGPIO2 = splashOutWvGPIO2;
    this.splashOutWvGPIO3 = splashOutWvGPIO3;
    this.versionText = versionText;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySplashBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySplashBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_splash, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySplashBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.splashIn_wvGPIO1;
      WebView splashInWvGPIO1 = ViewBindings.findChildViewById(rootView, id);
      if (splashInWvGPIO1 == null) {
        break missingId;
      }

      id = R.id.splashIn_wvGPIO2;
      WebView splashInWvGPIO2 = ViewBindings.findChildViewById(rootView, id);
      if (splashInWvGPIO2 == null) {
        break missingId;
      }

      id = R.id.splashIn_wvGPIO3;
      WebView splashInWvGPIO3 = ViewBindings.findChildViewById(rootView, id);
      if (splashInWvGPIO3 == null) {
        break missingId;
      }

      id = R.id.splashOut_wvGPIO1;
      WebView splashOutWvGPIO1 = ViewBindings.findChildViewById(rootView, id);
      if (splashOutWvGPIO1 == null) {
        break missingId;
      }

      id = R.id.splashOut_wvGPIO2;
      WebView splashOutWvGPIO2 = ViewBindings.findChildViewById(rootView, id);
      if (splashOutWvGPIO2 == null) {
        break missingId;
      }

      id = R.id.splashOut_wvGPIO3;
      WebView splashOutWvGPIO3 = ViewBindings.findChildViewById(rootView, id);
      if (splashOutWvGPIO3 == null) {
        break missingId;
      }

      id = R.id.version_text;
      TextView versionText = ViewBindings.findChildViewById(rootView, id);
      if (versionText == null) {
        break missingId;
      }

      return new ActivitySplashBinding((FrameLayout) rootView, splashInWvGPIO1, splashInWvGPIO2,
          splashInWvGPIO3, splashOutWvGPIO1, splashOutWvGPIO2, splashOutWvGPIO3, versionText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
